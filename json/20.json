{
    "article_id": "7133514836667236365",
    "audit_status": 2,
    "brief_content": "\u539f\u751f Canvas\u3001React-konva \u753b\u7f51\u683c \u6211\u4eec\u8bbe\u5b9a canvas \u521d\u59cb\u5316\u5de6\u4e0a\u89d2\u9876\u70b9\u4e3a 0,0 \u70b9\uff0c\u5411\u53f3\ud83d\udc49\u548c\u5411\u4e0b\ud83d\udc47\u662f X Y \u8f74\u6b63\u65b9\u5411 \u4e00\u3001\u539f\u751f Canvas \u753b\u7f51\u683c 1\u3001\u4f7f\u7528 Canvas ",
    "category_id": "6809637767543259144",
    "collect_count": 0,
    "comment_count": 0,
    "content": "",
    "cover_image": "https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ecab00e0cfa443c29d42b8e0114ef3e3~tplv-k3u1fbpfcp-watermark.image?",
    "ctime": "1660900885",
    "digg_count": 4,
    "display_count": 0,
    "draft_id": "7133513689985974309",
    "hot_index": 13,
    "is_english": 0,
    "is_gfw": 0,
    "is_hot": 0,
    "is_markdown": 1,
    "is_original": 1,
    "link_url": "",
    "mark_content": "# \u539f\u751f Canvas\u3001React-konva \u753b\u7f51\u683c\n\n>\u7f51\u683c\uff1a\u4e00\u79cd\u53ef\u4ee5\u5728 `canvas` \u9762\u677f\u4e0a\u7ed8\u5236\u56fe\u5f62\u7684\u8f85\u52a9\u7ebf\u96c6\u5408\u3002\n\n\n![grid.jpg](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/94ce95f2cf4f4ae8a7e4b683a381e347~tplv-k3u1fbpfcp-watermark.image?)\n\n\u6211\u4eec\u8bbe\u5b9a `canvas` \u521d\u59cb\u5316\u5de6\u4e0a\u89d2\u9876\u70b9\u4e3a `0,0` \u70b9\uff0c\u5411\u53f3\ud83d\udc49\u548c\u5411\u4e0b\ud83d\udc47\u662f `X` `Y` \u8f74\u6b63\u65b9\u5411\n\n## \u4e00\u3001\u539f\u751f `Canvas` \u753b\u7f51\u683c\n### 1\u3001\u4f7f\u7528 `Canvas` \u7684\u65b9\u6cd5\n> \u539f\u751f\u753b\u7f51\u683c\uff0c\u53ea\u9700\u8981\u4f7f\u7528 `ctx` \u7684 `moveTo`\u3001`lineTo`\u3001`strokeStyle`\n#### 1. `moveTo`\n> \u662f Canvas 2D API \u5c06\u4e00\u4e2a\u65b0\u7684\u5b50\u8def\u5f84\u7684\u8d77\u59cb\u70b9\u79fb\u52a8\u5230 (x\uff0cy) \u5750\u6807\u7684\u65b9\u6cd5\u3002\n\n> `ctx.moveTo(x, y);`\n#### 2. `lineTo`\n> \u662f Canvas 2D API \u4f7f\u7528\u76f4\u7ebf\u8fde\u63a5\u5b50\u8def\u5f84\u7684\u7ec8\u70b9\u5230 x\uff0cy \u5750\u6807\u7684\u65b9\u6cd5\u3002\n\n> `ctx.lineTo(x, y);`\n#### 3. `strokeStyle`\n> \u662f Canvas 2D API \u63cf\u8ff0\u753b\u7b14\uff08\u7ed8\u5236\u56fe\u5f62\uff09\u989c\u8272\u6216\u8005\u6837\u5f0f\u7684\u5c5e\u6027\u3002\u9ed8\u8ba4\u503c\u662f #000\n\n> `ctx.strokeStyle = '#ff0000'`\n\n### 2\u3001\u4ee3\u7801\n\n```ts\nimport React, { useEffect, useState } from 'react';\nimport { Button } from 'antd';\n\ninterface IPageSlicePosType {\n    x: number;\n    y: number;\n}\n\nexport const CanvasGrid = () => {\n\n    // \u5f53\u524d canvas \u7684 0 0 \u5750\u6807\uff0c\u6211\u4eec\u8bbe\u7f6e canvas \u5de6\u4e0a\u89d2\u9876\u70b9\u4e3a 0 0\uff0c\u5411\u53f3\ud83d\udc49\u548c\u5411\u4e0b\ud83d\udc47\u662f X Y \u8f74\u6b63\u65b9\u5411\uff0c0\uff0c0 \u4e3a pageSlicePos \u521d\u59cb\u503c\n    const [pageSlicePos, setPageSlicePos] = useState<IPageSlicePosType>({\n        x: 0,\n        y: 0,\n    });\n    const [ctxVal, setCtxVal] = useState<any>(null); // canvas \u7684 ctx\n    const [scale, setScale] = useState<number>(1); // \u7f29\u653e\u6bd4\u4f8b\n    const [solidColor] = useState<string>('#CCCCCC70'); // \u5b9e\u7ebf\u989c\u8272\n    const [dashedColor] = useState<string>('#CCCCCC25'); // \u865a\u7ebf\u989c\u8272\n    const [zeroColor] = useState<string>('#358bf3'); // 0 \u70b9\u5750\u6807\u7cfb\u989c\u8272\n\n    // \u76d1\u542c pageSlicePos \u6570\u636e\uff0c\u6709\u53d8\u52a8\u5219\u8fdb\u884c canvas \u7684\u7ed8\u5236\n    useEffect(() => {\n        if (ctxVal) {\n            // \u91cd\u65b0\u7ed8\u5236\u4e4b\u524d\u6e05\u7a7a canvas\n            ctxVal.clearRect(0, 0, ctxVal.canvas.width, ctxVal.canvas.height);\n        }\n        drawLineGrid();\n    }, [pageSlicePos]);\n\n    /**\n     * \u7ed8\u5236\u7f51\u683c\n     * @param scaleVal \u7f29\u653e\u500d\u6570\n     */\n    const drawLineGrid = (scaleVal = scale) => {\n        /*\u83b7\u53d6\u5143\u7d20*/\n        var myCanvas: any = document.querySelector('#myCanvas');\n        /*\u83b7\u53d6\u7ed8\u56fe\u5de5\u5177*/\n        var ctx = ctxVal || myCanvas.getContext('2d');\n        setCtxVal(ctx);\n        // \u8bbe\u7f6e\u7f51\u683c\u5927\u5c0f\n        var girdSize = 5 * scaleVal;\n\n        // \u83b7\u53d6Canvas\u7684width\u3001height\n        var CanvasWidth = ctx.canvas.width;\n        var CanvasHeight = ctx.canvas.height;\n\n        // \u5728 pageSlicePos \u7684 x\uff0cy \u70b9\u4f4d\u753b\u4e00\u4e2a 10 * 10 \u7684\u7ea2\u8272\u6807\u8bb0\u7528\u6765\u8868\u793a\u5f53\u524d\u9875\u9762\u7684 0 0 \u5750\u6807\n        ctx.fillRect(pageSlicePos.x, pageSlicePos.y, 10, 10); // \u6548\u679c\u56fe\u7ea2\u8272\u5c0f\u65b9\u5757\n        ctx.fillStyle = 'red';\n\n        const canvasXHeight = CanvasHeight - pageSlicePos.y;\n        const canvasYWidth = CanvasWidth - pageSlicePos.x;\n        // \u4ece pageSlicePos.y \u5904\u5f00\u59cb\u5f80 Y \u8f74\u6b63\u65b9\u5411\u753b X \u8f74\u7f51\u683c\n        const xPageSliceTotal = Math.ceil(canvasXHeight / girdSize);\n        for (let i = 0; i < xPageSliceTotal; i++) {\n            ctx.beginPath(); // \u5f00\u542f\u8def\u5f84\uff0c\u8bbe\u7f6e\u4e0d\u540c\u7684\u6837\u5f0f\n            ctx.moveTo(0, pageSlicePos.y + girdSize * i);\n            ctx.lineTo(CanvasWidth, pageSlicePos.y + girdSize * i);\n            ctx.strokeStyle = i === 0 ? zeroColor : (i % 5 === 0 ? solidColor : dashedColor); // \u5982\u679c\u4e3a 0 \u5219\u7528\u84dd\u8272\u6807\u8bb0\uff0c\u53d6\u4f59 5 \u4e3a\u5b9e\u7ebf\uff0c\u5176\u4f59\u4e3a\u6bd4\u8f83\u6de1\u7684\u7ebf\n            ctx.stroke();\n        }\n\n        // \u4ece pageSlicePos.y \u5904\u5f00\u59cb\u5f80 Y \u8f74\u8d1f\u65b9\u5411\u753b X \u8f74\u7f51\u683c\n        const xRemaining = pageSlicePos.y;\n        const xRemainingTotal = Math.ceil(xRemaining / girdSize);\n        for (let i = 0; i < xRemainingTotal; i++) {\n            if (i === 0) continue;\n            ctx.beginPath(); // \u5f00\u542f\u8def\u5f84\uff0c\u8bbe\u7f6e\u4e0d\u540c\u7684\u6837\u5f0f\n            ctx.moveTo(0, pageSlicePos.y - girdSize * i); // -0.5\u662f\u4e3a\u4e86\u89e3\u51b3\u50cf\u7d20\u6a21\u7cca\u95ee\u9898\n            ctx.lineTo(CanvasWidth, pageSlicePos.y - girdSize * i);\n            ctx.strokeStyle = i === 0 ? zeroColor : (i % 5 === 0 ? solidColor : dashedColor);// \u5982\u679c\u4e3a 0 \u5219\u7528\u84dd\u8272\u6807\u8bb0\uff0c\u53d6\u4f59 5 \u4e3a\u5b9e\u7ebf\uff0c\u5176\u4f59\u4e3a\u6bd4\u8f83\u6de1\u7684\u7ebf\n            ctx.stroke();\n        }\n\n        // \u4ece pageSlicePos.x \u5904\u5f00\u59cb\u5f80 X \u8f74\u6b63\u65b9\u5411\u753b Y \u8f74\u7f51\u683c\n        const yPageSliceTotal = Math.ceil(canvasYWidth / girdSize); // \u8ba1\u7b97\u9700\u8981\u7ed8\u753by\u8f74\u7684\u6761\u6570\n        for (let j = 0; j < yPageSliceTotal; j++) {\n            ctx.beginPath(); // \u5f00\u542f\u8def\u5f84\uff0c\u8bbe\u7f6e\u4e0d\u540c\u7684\u6837\u5f0f\n            ctx.moveTo(pageSlicePos.x + girdSize * j, 0);\n            ctx.lineTo(pageSlicePos.x + girdSize * j, CanvasHeight);\n            ctx.strokeStyle = j === 0 ? zeroColor : (j % 5 === 0 ? solidColor : dashedColor);// \u5982\u679c\u4e3a 0 \u5219\u7528\u84dd\u8272\u6807\u8bb0\uff0c\u53d6\u4f59 5 \u4e3a\u5b9e\u7ebf\uff0c\u5176\u4f59\u4e3a\u6bd4\u8f83\u6de1\u7684\u7ebf\n            ctx.stroke();\n        }\n\n        // \u4ece pageSlicePos.x \u5904\u5f00\u59cb\u5f80 X \u8f74\u8d1f\u65b9\u5411\u753b Y \u8f74\u7f51\u683c\n        const yRemaining = pageSlicePos.x;\n        const yRemainingTotal = Math.ceil(yRemaining / girdSize);\n        for (let j = 0; j < yRemainingTotal; j++) {\n            if (j === 0) continue;\n            ctx.beginPath(); // \u5f00\u542f\u8def\u5f84\uff0c\u8bbe\u7f6e\u4e0d\u540c\u7684\u6837\u5f0f\n            ctx.moveTo(pageSlicePos.x - girdSize * j, 0);\n            ctx.lineTo(pageSlicePos.x - girdSize * j, CanvasHeight);\n            ctx.strokeStyle = j === 0 ? zeroColor : (j % 5 === 0 ? solidColor : dashedColor);// \u5982\u679c\u4e3a 0 \u5219\u7528\u84dd\u8272\u6807\u8bb0\uff0c\u53d6\u4f59 5 \u4e3a\u5b9e\u7ebf\uff0c\u5176\u4f59\u4e3a\u6bd4\u8f83\u6de1\u7684\u7ebf\n            ctx.stroke();\n        }\n    };\n    \n\t/**\n     * \u70b9\u51fb\u7f29\u653e\uff0c\u8bbe\u7f6e\u7f29\u653e\u500d\u6570\n     */\n    const clickScale = () => {\n        const scaleVal = scale + 1 > 6 ? 1 : scale + 1;\n        setScale(scaleVal);\n        ctxVal.clearRect(0, 0, ctxVal.canvas.width, ctxVal.canvas.height);\n        drawLineGrid(scaleVal);\n    }\n\n    /**\n     * \u62d6\u52a8 canvas \u52a8\u6001\u6e32\u67d3\uff0c\u62d6\u52a8\u65f6\uff0c\u52a8\u6001\u8bbe\u7f6e pageSlicePos \u7684\u503c\n     * @param e Event\n     */\n    const mouseDown = (e: any) => {\n        const downX = e.clientX;\n        const downY = e.clientY;\n        const { x, y } = pageSlicePos;\n        var myCanvas: any = document.querySelector('#myCanvas');\n        myCanvas.onmousemove = (ev: any) => {\n            const moveX = ev.clientX;\n            const moveY = ev.clientY;\n            setPageSlicePos({\n                x: x + (moveX - downX),\n                y: y + (moveY - downY),\n            });\n            myCanvas.onmouseup = (en: any) => {\n                myCanvas.onmousemove = null;\n                myCanvas.onmouseup = null;\n            };\n        }\n        myCanvas.onmouseup = (en: any) => {\n            myCanvas.onmousemove = null;\n            myCanvas.onmouseup = null;\n        };\n    }\n    return (\n        <div className='canvas'>\n            <div>\n                <Button onClick={clickScale}>\u7f29\u653e{scale}</Button>\n            </div>\n            <div style={{ width: '600px', margin: '0 auto'}}>\n                <canvas onMouseDown={mouseDown} id=\"myCanvas\" width=\"600\" height=\"400\"></canvas>\n            </div>\n        </div>\n    )\n}\n```\n### 3\u3001\u6548\u679c\u5c55\u793a\n\n![ys-canvas.jpg](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1c7165d31564424ba6f505f0ccf8d78b~tplv-k3u1fbpfcp-watermark.image?)\n\n\n## \u4e8c\u3001`React-konva`\n### 1\u3001`konva` \u4ecb\u7ecd\n[`Konva` \u4e2d\u6587\u7f51](http://konvajs-doc.bluehymn.com/)\n[`React-konva`](https://konvajs.org/docs/react/Intro.html)\n### 2\u3001`react-konva` \u793a\u4f8b\n```ts\nimport { Stage, Layer, Rect, Circle } from 'react-konva';\n\nexport const App = () => {\n  return (\n    // Stage - is a div wrapper\n    // Layer - is an actual 2d canvas element, so you can have several layers inside the stage\n    // Rect and Circle are not DOM elements. They are 2d shapes on canvas\n    <Stage width={window.innerWidth} height={window.innerHeight}>\n      <Layer>\n        <Rect width={50} height={50} fill=\"red\" />\n        <Circle x={200} y={200} stroke=\"black\" radius={50} />\n      </Layer>\n    </Stage>\n  );\n}\n```\n### 3\u3001\u4ee3\u7801\n#### 1. `konva-canvas.tsx`\n```ts\nimport React, { useState } from \"react\";\nimport { Button } from 'antd';\nimport { Stage } from \"react-konva\";\nimport { LineGrid } from '../components/line-grid';\n\nexport const KonvasCanvas = () => {\n    const [scale, setScale] = useState<number>(1); // \u7f29\u653e\u6bd4\u4f8b\n    const [stagePos, setStagePos] = React.useState({ x: 0, y: 0 }); // \u9875\u9762 0 0 \u5750\u6807\u4f4d\u7f6e\n    const [CanvasWidth] = useState<number>(600); // canvas \u5bbd\u5ea6\n    const [CanvasHeight] = useState<number>(400); // canvas \u9ad8\u5ea6\n    \n    /**\n     * \u70b9\u51fb\u7f29\u653e\n     */\n    const clickScale = () => {\n        const scaleVal = scale + 1 > 6 ? 1 : scale + 1;\n        setScale(scaleVal);\n    }\n    return (\n        <div className='konva' style={{ width: '600px', margin: '20px auto', }}>\n            <Button onClick={clickScale}>\u7f29\u653e{scale}</Button>\n            <div id=\"konva-canvas\">\n                <Stage\n                    x={stagePos.x}\n                    y={stagePos.y}\n                    width={CanvasWidth}\n                    height={CanvasHeight}\n                    strokeWidth={1}\n                    draggable\n                    onDragMove={e => {\n                    \t// \u62d6\u52a8\u4e8b\u4ef6\uff0c\u8bbe\u7f6e stagePos \u503c\n                        const { x, y } = e.currentTarget.position();\n                        setStagePos({\n                            x: Math.round(x),\n                            y: Math.round(y),\n                        });\n                    }}\n                >\n                    <LineGrid scale={scale} CanvasWidth={CanvasWidth} CanvasHeight={CanvasHeight} stagePos={stagePos} />\n                </Stage>\n            </div>\n        </div>\n    )\n};\n```\n#### 2. `LineGrid.tsx`\n```ts\nimport React, { useState } from 'react';\nimport { Layer, Rect, Line } from \"react-konva\";\n\nexport const LineGrid = (props: any) => {\n    const { scale, stagePos, CanvasWidth, CanvasHeight } = props;\n    // \u9700\u8981\u63d2\u5165\u7684\u7f51\u683c components\n    const gridComponents = [];\n    // \u7f51\u683c\u5206\u6210\u591a\u5c11\u4efd \u5bbd\u5ea6 * \u500d\u6570 / \u9700\u8981\u591a\u5c11\u7f51\u683c\u6570\n    const girdSize = 100 * scale / 20;\n    // canvas X\u3001Y \u8f74\u8ddd\u79bb stagePos x y \u7684\u8ddd\u79bb\n    const canvasXHeight = CanvasHeight - stagePos.y;\n    const canvasYWidth = CanvasWidth - stagePos.x;\n    const [solidColor] = useState<string>('#CCCCCC70'); // \u5b9e\u7ebf\u989c\u8272\n    const [dashedColor] = useState<string>('#CCCCCC25'); // \u865a\u7ebf\u989c\u8272\n    const [zeroColor] = useState<string>('#358bf3'); // 0 \u70b9\u989c\u8272\n    const [strokeWidth] = useState<number>(1); // strokeWidth\n    const [shadowOpacity] = useState<number>(0); // shadowOpacity\n    const [shadowEnabled] = useState<boolean>(false); // shadowEnabled\n\n    // \u4ece pageSlicePos.y \u5904\u5f00\u59cb\u5f80 Y \u8f74\u6b63\u65b9\u5411\u753b X \u8f74\u7f51\u683c\n    const xPageSliceTotal = Math.ceil(canvasXHeight / girdSize);\n    for (let i = 0; i < xPageSliceTotal; i++) {\n        gridComponents.push(<Line\n            x={0 - stagePos.x}\n            y={girdSize * i}\n            strokeWidth={strokeWidth}\n            shadowOpacity={shadowOpacity}\n            shadowEnabled={shadowEnabled}\n            points={[0, 0, CanvasWidth, 0]}\n            stroke={i === 0 ? zeroColor : i % 5 === 0 ? solidColor : dashedColor}\n        />)\n    }\n\n    // \u4ece pageSlicePos.y \u5904\u5f00\u59cb\u5f80 Y \u8f74\u8d1f\u65b9\u5411\u753b X \u8f74\u7f51\u683c\n    const xRemaining = stagePos.y;\n    const xRemainingTotal = Math.ceil(xRemaining / girdSize);\n    for (let i = 0; i < xRemainingTotal; i++) {\n        if (i === 0) continue;\n        gridComponents.push(<Line\n            x={0 - stagePos.x}\n            y={-girdSize * i}\n            strokeWidth={strokeWidth}\n            shadowOpacity={shadowOpacity}\n            shadowEnabled={shadowEnabled}\n            points={[0, 0, CanvasWidth, 0]}\n            stroke={i === 0 ? zeroColor : i % 5 === 0 ? solidColor : dashedColor}\n        />)\n    }\n\n    // \u4ece pageSlicePos.x \u5904\u5f00\u59cb\u5f80 X \u8f74\u6b63\u65b9\u5411\u753b Y \u8f74\u7f51\u683c\n    const yPageSliceTotal = Math.ceil(canvasYWidth / girdSize); // \u8ba1\u7b97\u9700\u8981\u7ed8\u753by\u8f74\u7684\u6761\u6570\n    for (let j = 0; j < yPageSliceTotal; j++) {\n        gridComponents.push(<Line\n            x={girdSize * j}\n            y={0 - stagePos.y}\n            strokeWidth={strokeWidth}\n            shadowOpacity={shadowOpacity}\n            shadowEnabled={shadowEnabled}\n            points={[0, 0, 0, CanvasHeight]}\n            stroke={j === 0 ? zeroColor : j % 5 === 0 ? solidColor : dashedColor}\n        />)\n    }\n\n    // \u4ece pageSlicePos.x \u5904\u5f00\u59cb\u5f80 X \u8f74\u8d1f\u65b9\u5411\u753b Y \u8f74\u7f51\u683c\n    const yRemaining = stagePos.x;\n    const yRemainingTotal = Math.ceil(yRemaining / girdSize);\n    for (let j = 0; j < yRemainingTotal; j++) {\n        if (j === 0) continue;\n        gridComponents.push(<Line\n            x={-girdSize * j}\n            y={0 - stagePos.y}\n            strokeWidth={strokeWidth}\n            shadowOpacity={shadowOpacity}\n            shadowEnabled={shadowEnabled}\n            points={[0, 0, 0, CanvasHeight]}\n            stroke={j === 0 ? zeroColor : j % 5 === 0 ? solidColor : dashedColor}\n        />)\n    }\n\n    // 0 0 \u4f4d\u7f6e\u753b\u4e00\u4e2a 10 10 \u7684\u7ea2\u8272 rect \u77e9\u5f62\n    gridComponents.push(<Rect\n        x={0}\n        y={0}\n        width={10}\n        height={10}\n        fill=\"red\"\n    />);\n\n    return (\n        <Layer>\n            {gridComponents}\n        </Layer>\n    );\n};\n```\n### 4\u3001\u6548\u679c\u56fe\n\n\n![konva-canvas.jpg](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f89c52138c784eb089c1a5bcb7c72d54~tplv-k3u1fbpfcp-watermark.image?)\n\n## \u4e09\u3001\u4ee3\u7801\n[github \u94fe\u63a5](https://github.com/18055975947/canvas-grid)\n\n[\u7801\u4e91\u94fe\u63a5](https://gitee.com/guoqiankun/canvas-grid)",
    "mtime": "1660959886",
    "original_author": "",
    "original_type": 0,
    "rank_index": 4.01086995,
    "rtime": "1660959886",
    "status": 2,
    "tag_ids": [
      6809640407484334080,
      6809640497393434624,
      6809640357354012672
    ],
    "title": "\u7f51\u683c\u753b\u6cd5\uff1a\u539f\u751f Canvas\u3001React-konva \u753b\u7f51\u683c\uff0c\u53ef\u62d6\u52a8\u3001\u53ef\u653e\u5927\u7f29\u5c0f\u3001\u5e76\u5e26\u6709\u5750\u6807\u7cfb 0 0 \u4f4d\u7f6e\u8f85\u52a9\u7ebf",
    "user_id": "2409752520033768",
    "user_index": 8.378932841735544,
    "verify_status": 1,
    "view_count": 199,
    "visible_level": 0
  }