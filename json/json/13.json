{
    "article_id": "7133772101428707358",
    "audit_status": 2,
    "brief_content": "\u6700\u8fd1\u5728\u505a\u4e2a\u8868\u60c5\u5305\u7684\u5c0f\u7a0b\u5e8f\uff0c\u6d89\u53ca\u5230\u8868\u60c5\u5305\u641c\u7d22\u529f\u80fd\u3002\u6211\u4eec\u4e0a\u4f20\u8868\u60c5\u5305\u7684\u65f6\u5019\uff0c\u53ea\u6709\u4e00\u5f20\u56fe\uff0c\u600e\u4e48\u641c\u7d22\uff1f\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u60f3\u5230\u5c31\u662f\u5c06\u8868\u60c5\u5305\u7684\u6587\u5b57\u63d0\u53d6\u51fa\u6765\uff0c\u4f5c\u4e3a\u641c\u7d22\u7684\u5185\u5bb9\u3002\u90a3\u4e48\u8fd9\u5c31\u9700\u8981\u7528\u5230 ocr \u6280\u672f\u4e86\u3002 \u7ecf\u8fc7\u51e0\u4e2a o",
    "category_id": "6809637767543259144",
    "collect_count": 0,
    "comment_count": 0,
    "content": "",
    "cover_image": "",
    "ctime": "1660960809",
    "digg_count": 1,
    "display_count": 0,
    "draft_id": "7133771626172121125",
    "hot_index": 12,
    "is_english": 0,
    "is_gfw": 0,
    "is_hot": 0,
    "is_markdown": 1,
    "is_original": 1,
    "link_url": "",
    "mark_content": "\u6700\u8fd1\u5728\u505a\u4e2a\u8868\u60c5\u5305\u7684\u5c0f\u7a0b\u5e8f\uff0c\u6d89\u53ca\u5230\u8868\u60c5\u5305\u641c\u7d22\u529f\u80fd\u3002\u6211\u4eec\u4e0a\u4f20\u8868\u60c5\u5305\u7684\u65f6\u5019\uff0c\u53ea\u6709\u4e00\u5f20\u56fe\uff0c\u600e\u4e48\u641c\u7d22\uff1f\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u60f3\u5230\u5c31\u662f\u5c06\u8868\u60c5\u5305\u7684\u6587\u5b57\u63d0\u53d6\u51fa\u6765\uff0c\u4f5c\u4e3a\u641c\u7d22\u7684\u5185\u5bb9\u3002\u90a3\u4e48\u8fd9\u5c31\u9700\u8981\u7528\u5230 ocr \u6280\u672f\u4e86\u3002\n\n\u7ecf\u8fc7\u51e0\u4e2a ocr \u7684\u5e93\u7684\u4f7f\u7528\uff0c\u5c0f\u7f16\u5f3a\u70c8\u63a8\u8350\u4f7f\u7528 [PaddleOCR](https://github.com/PaddlePaddle/PaddleOCR)\uff0c\u4e00\u6b3e\u6587\u672c\u8bc6\u522b\u6548\u679c\u4e0d\u8f93\u4e8e\u5546\u7528\u7684Python\u5e93\uff01\n\n\u5bf9\u4e8e [PaddleOCR](https://github.com/PaddlePaddle/PaddleOCR) \u672c\u6587\u4e0d\u4f1a\u8fc7\u591a\u4ecb\u7ecd\uff0c\u53ef\u81ea\u884c\u641c\u7d22\u3002\u91cd\u70b9\u662f\u5982\u4f55\u4f7f\u7528 PaddleOCR \u89e3\u51b3\u6211\u7684\u95ee\u9898\u3002\n\n## \u5b89\u88c5 PaddleOCR \n\n```shell\npip install paddlepaddle\npip install paddleocr\n```\n\n\u6211\u8fd9\u8fb9\u5b89\u88c5\u540e\u7684\u7248\u672c\uff1a\n\n```shell\npaddleocr==2.5.0.3\npaddlepaddle==2.3.1\n```\n\n\u5728 macOS \u5b89\u88c5\u540e\uff0c\u9879\u76ee\u8fd0\u884c\u62a5\u9519\u62a5\u9519\uff0c\u5fd8\u4e86\u622a\u56fe\uff0c\u5e94\u8be5\u662f\u4e0e setuptools \u7248\u672c\u6709\u5173\uff0c\u89e3\u51b3\u65b9\u5f0f\uff1a\n\n```shell\npip install --upgrade setuptools==59.8.0\n```\n\n\u5b8c\u6210\u8fd9\u4e9b\u914d\u7f6e\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u73a9\u800d\u4e86\u3002\n\n## \u672c\u5730\u5904\u7406\n\n```py\nimport hashlib\nimport io\nfrom PIL import Image\nfrom paddleocr import PaddleOCR\n\ndef get_gif_pic_path(url):\n    '''\u4e0b\u8f7d\u56fe\u7247\uff0c\u8fd4\u56de\u56fe\u7247\u7b2c\u4e00\u5e27\u8def\u5f84'''\n    response = requests.get(url)\n    filename = hashlib.md5(url.encode(encoding='utf-8')).hexdigest()\n    img = Image.open(io.BytesIO(response.content))\n    current = img.tell()\n    img_path = f'bqb/{filename}_{current}.png'\n    img.save(img_path)\n    return img_path\n\ndef ocr_get_gif_text_sec(url) -> str:\n    '''\u8bc6\u522bgif\u7b2c\u4e00\u5e27\u56fe\u7247\u7684\u6587\u5b57'''\n    img_path = get_gif_pic_path(url)\n    ocr = PaddleOCR(use_angle_cls=True, lang='ch')\n    result = ocr.ocr(img_path, cls=True)\n    data = []\n    for item in result:\n        data.append(item[1][0])\n    return \",\".join(data)\n    \nocr_get_gif_text_sec('https://xxxxxx')\n```\n\n\u7531\u4e8e gif \u662f\u4e2a\u52a8\u56fe\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u53d6\u51fa\u56fe\u7247\u7684\u7b2c\u4e00\u5e27\u8fdb\u884c\u8bc6\u522b\uff0c`get_gif_pic_path`\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u529f\u80fd\u3002`ocr_get_gif_text_sec` \u4ece gif \u7b2c\u4e00\u5e27\u7684\u56fe\u8fdb\u884c\u6587\u5b57\u63d0\u53d6\uff0c\u8fd4\u56de\u7684 `result` \u662f\u4e2a\u6570\u7ec4\uff0c\u6211\u4eec\u901a\u8fc7\u904d\u5386\u8fdb\u884c\u63d0\u53d6\u51fa\u6765\u3002\n\n\u63d0\u53d6 gif \u56fe\u7247\u7684\u5185\u5bb9\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\uff0c\u4e24\u4e2a\u51fd\u6570\u7684\u529f\u80fd\u4e5f\u6bd4\u8f83\u7b80\u5355\u3002\u672c\u6587\u6ca1\u505a gif \u5168\u90e8\u6587\u5b57\u7684\u63d0\u53d6\uff0c\u6709\u5174\u8da3\u53ef\u4ee5\u6311\u6218\u4e0b\u3002\n\n## \u5728 flask \u4e2d\u5904\u7406\n\n\u5f53\u6211\u4eec\u60f3\u5728\u4e0a\u4f20\u56fe\u7247\u7684\u65f6\u5019\uff0c\u8fdb\u884c\u5bf9\u56fe\u7247\u6587\u5b57\u7684\u5904\u7406\u600e\u4e48\u529e\uff1f\u96be\u9053\u8981\u5c06\u4e0a\u4f20\u7684\u56fe\u4fdd\u5b58\u5230\u8def\u5f84\u518d\u53bb\u8bc6\u522b\u4e48\uff1f\u8fd9\u4e5f\u662f\u6211\u5728\u5f00\u53d1\u4e2d\u9047\u5230\u7684\u4e00\u4e2a\u95ee\u9898\uff0c\u7ecf\u8fc7\u62c6\u5751\uff0c\u7b54\u6848\u662f\uff1a\u4e0d\uff0c\u4f60\u4e0d\u9700\u8981\u3002\n\n\u601d\u8def\uff1a\u6211\u4eec\u53ef\u4ee5\u4ece\u8868\u5355\u4e2d\u83b7\u53d6\u4e0a\u4f20\u7684\u56fe\u7247\u7684\u4e8c\u8fdb\u5236\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u4e8c\u8fdb\u5236\u4f20\u7ed9`ocr.ocr()`\uff0c\u90a3\u4e48`ocr.ocr()` \u652f\u6301\u8fd9\u4e2a\u7c7b\u578b\u4e48\uff1f\u7ecf\u8fc7\u67e5\u770b\u6b64\u51fd\u6570\u6e90\u7801\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba9\u5b83\u652f\u6301\u3002\n\n\u5c06\u56fe\u7247\u4e8c\u8fdb\u5236\u8f6c\u5316\u4e3a nparray \u7c7b\u578b\u5373\u53ef\u3002\u4e0b\u9762\u662f\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u5177\u4f53\u4ee3\u7801\n\n```py\nfrom paddleocr import PaddleOCR\nimport numpy as np\nimport cv2\n\n@app.route('/v1/upload_img', methods=['POST'])\ndef api_v1_upload_img():\n    if 'file' not in request.files:\n        return \"no file part\"\n    file = request.files['file']\n    if file.filename == '':\n        return \"no selected file\"\n    if file:\n        file_name = file.filename\n        # \u83b7\u53d6\u56fe\u7247\u7684\u4e8c\u8fdb\u5236\n        res = upload_image(bytes=file.read(), filename=file_name)\n        return res\n    else:\n        return \"no file\"\n\ndef upload_image(bytes, filename = None, mime_type = None):\n    ocr = PaddleOCR(use_angle_cls=True, lang=\"ch\")\n    \n    ## \u6838\u5fc3\u6b65\u9aa4\n    np_arr = np.frombuffer(bytes, dtype=np.uint8)\n    img = cv2.imdecode(np_arr, cv2.IMREAD_COLOR)\n    \n    # \u8fdb\u884c\u8bc6\u522b\n    result = ocr.ocr(img=img, cls=True)\n    ocr_result = []\n    for line in result:\n        ocr_result.append(line[1][0].strip())\n    img_content = ' '.join(ocr_result)\n    return img_content   \n```\n\n\u5728`api_v1_upload_img`\u6211\u4eec\u83b7\u53d6\u5230\u56fe\u7247\u4e8c\u8fdb\u5236\u4ee5\u53ca\u56fe\u7247\u540d\uff0c\u5c06\u8fd9\u4e9b\u4f5c\u4e3a\u53c2\u6570\u4f20\u5230`upload_image`\uff0c\u5728`upload_image`\u4e2d\uff1a\n\n```py\nnp_arr = np.frombuffer(bytes, dtype=np.uint8)\nimg = cv2.imdecode(np_arr, cv2.IMREAD_COLOR)\n```\n\n\u4e0a\u9762\u4e24\u884c\u4ee3\u7801\u662f\u8fd9\u4e2a\u9700\u6c42\u7684\u6838\u5fc3\u7a81\u7834\u70b9\u3002\n\n\u8fd8\u6709\u4e00\u70b9\u5c31\u662f\u5efa\u8bae**\u4e0d\u8981\u5c06\u6b64\u8bc6\u522b\u529f\u80fd\u90e8\u7f72\u5230\u6027\u80fd\u5dee\u7684\u673a\u5668\u4e0a**\uff0c\u5e76\u53d1\u4e00\u4e0b\uff0c\u5b8c\u5168\u625b\u4e0d\u4f4f\uff0c\u9ed8\u9ed8\u7684\u7559\u4e0b\u4e24\u884c\u773c\u6cea\u3002\n\n\u66f4\u591a\u5b9e\u7528\u6587\u7ae0\uff0c\u8bf7\u5173\u6ce8 **OldBirds** \u5fae\u4fe1\u516c\u4f17\u53f7\uff01",
    "mtime": "1660963374",
    "original_author": "",
    "original_type": 0,
    "rank_index": 6.12425139,
    "rtime": "1660963374",
    "status": 2,
    "tag_ids": [
      6809640448827588608,
      6809641090145058816,
      6809640391457898496
    ],
    "title": "\u7528 PaddleOCR \u8bc6\u522b\u8868\u60c5\u5305\u6587\u5b57",
    "user_id": "325111172054350",
    "user_index": 9.782093913883518,
    "verify_status": 1,
    "view_count": 225,
    "visible_level": 0
  }

